<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http pattern="/denied" security="none" />
    
	<http use-expressions="true" auto-config="true">
		<access-denied-handler ref="accessDeniedHandler" />
		<form-login login-page="/login" default-target-url="/welcome" authentication-failure-url="/login?login_error" />
		<logout logout-success-url="/logout" />
		<remember-me />
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/> 
	</http>
	
	<beans:bean id="accessDeniedHandler" class="net.icocoa.oa.MyAccessDeniedHandler" />

	<authentication-manager alias="myAuthenticationManager">
		<authentication-provider user-service-ref="myUserDetailService">
		     <password-encoder hash="plaintext">
             </password-encoder>
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="myUserDetailService" class="net.icocoa.oa.service.MyBatisUserDetailService">
		<beans:property name="userCache" ref="userCache"/>
	</beans:bean>
	<beans:bean id="myAccessDecisionManager" class="net.icocoa.oa.service.MyAccessDecisionManager"/> 
	<beans:bean id="mySecurityMetadataSource" class="net.icocoa.oa.service.MyBatisInvocationSecurityMetadataSourceService">
		<beans:constructor-arg name="resourcesDao" ref="resourceDaoImpl" />
	</beans:bean>
	<beans:bean id="myFilter" class="net.icocoa.oa.MyFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="myAuthenticationManager"></beans:property>
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManager"></beans:property>
		<beans:property name="securityMetadataSource" ref="mySecurityMetadataSource"></beans:property>
	</beans:bean>
	
	
	
	<!-- user & role & resource -->
	<!--
	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" 
			    users-by-username-query="
                    select username,password,enabled
                    from users where USERNAME=?"
				authorities-by-username-query="
                    select u.username, ur.authority from users u, user_roles ur
                    where u.user_id = ur.user_id and u.username =?" />
			<password-encoder hash="md5"/>
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="accessDecisionManager" class="net.icocoa.oa.CustomAccessDecisionManager">
  		<beans:property name="allowIfAllAbstainDecisions" value="false" />
  		<beans:property name="decisionVoters">
   			<beans:list>
    			<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
    			<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
   			</beans:list>
  		</beans:property>
 	</beans:bean>
	<beans:bean id="customSecurityMetadataSource" class="net.icocoa.oa.CustomFilterInvocationSecurityMetadataSource" />
	<beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
  		<beans:property name="authenticationManager" ref="authenticationManager" />
  		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
  		<beans:property name="securityMetadataSource" ref="customSecurityMetadataSource" />
 	</beans:bean>
 	-->
 	
 	<!-- xml user & roll -->
	<!--
	<authentication-manager> 
	    <authentication-provider> 
	        <user-service> 
	            <user name="admin" password="123456" authorities="ROLE_USER" /> 
	        </user-service> 
		</authentication-provider> 
	</authentication-manager>
	-->
	
</beans:beans>